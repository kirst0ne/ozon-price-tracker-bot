from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time


class OzonParser:
    def __init__(self, headless=True):
        self.headless = headless
        self.driver = None
        self.setup_driver()

    def setup_driver(self):
        try:
            options = webdriver.ChromeOptions()
            if self.headless:
                options.add_argument("--headless=new")

            options.add_argument("--no-sandbox")
            options.add_argument("--disable-dev-shm-usage")
            options.add_argument("--disable-blink-features=AutomationControlled")
            options.add_argument("--disable-notifications")
            options.add_argument("--disable-popup-blocking")
            options.add_argument("--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36")

            # ‚úÖ –°–ê–ú–´–ô –ü–†–û–°–¢–û–ô –í–ê–†–ò–ê–ù–¢ - webdriver_manager —Å–∞–º –≤—Å—ë —Å–¥–µ–ª–∞–µ—Ç
            self.driver = webdriver.Chrome(options=options)

            print("‚úÖ –î—Ä–∞–π–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
            raise

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã (get_product_price, accept_all_permissions) –æ—Å—Ç–∞—é—Ç—Å—è —Ç–µ –∂–µ!

    def accept_all_permissions(self):
        """–£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π"""
        try:
            # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
            time.sleep(3)

            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∫—É–∫–∏
            cookie_selectors = [
                "[data-widget='acceptCookie']",
                "button[aria-label*='cookie']",
                "button[aria-label*='Cookie']",
                ".cookie-button",
                ".accept-cookies",
                "button:contains('–ü—Ä–∏–Ω—è—Ç—å')",
                "button:contains('–ø—Ä–∏–Ω—è—Ç—å')"
            ]

            for selector in cookie_selectors:
                try:
                    cookie_button = WebDriverWait(self.driver, 3).until(
                        EC.element_to_be_clickable((By.CSS_SELECTOR, selector))
                    )
                    if cookie_button.is_displayed():
                        cookie_button.click()
                        print("‚úÖ –ö—É–∫–∏ –ø—Ä–∏–Ω—è—Ç—ã")
                        time.sleep(1)
                        break
                except:
                    continue

        except Exception as e:
            print(f"‚ÑπÔ∏è –ù–µ –Ω–∞—à–ª–∏ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω: {e}")

    def get_product_price(self, article):
        """–ü–∞—Ä—Å–∏—Ç —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞"""
        try:
            url = f"https://www.ozon.ru/product/{article}/"
            print(f"üåê –ü–∞—Ä—Å–∏–º —Ç–æ–≤–∞—Ä: {article}")

            self.driver.get(url)
            self.accept_all_permissions()

            WebDriverWait(self.driver, 15).until(
                EC.presence_of_element_located((By.TAG_NAME, "body"))
            )

            # –°–ø–∏—Å–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
            price_selectors = [
                (".pdp_bf2.tsHeadline500Medium", "–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä"),
                (".pdp_bf2.tsHeadline600Large", "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä"),
            ]

            price = None
            used_selector = None

            for selector, description in price_selectors:
                try:
                    # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç
                    element = self.driver.find_element(By.CSS_SELECTOR, selector)
                    if element.is_displayed():
                        candidate_price = element.text.strip()
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ü–µ–Ω—É (—Å–æ–¥–µ—Ä–∂–∏—Ç —Ü–∏—Ñ—Ä—ã)
                        if candidate_price and any(c.isdigit() for c in candidate_price):
                            price = candidate_price
                            used_selector = description
                            print(f"‚úÖ –¶–µ–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ {description}: {price}")
                            break
                except:
                    continue

            if not price:
                print("‚ùå –¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –æ–¥–Ω–∏–º –º–µ—Ç–æ–¥–æ–º")
                return {
                    'price': None,
                    'url': url,
                    'article': article,
                    'status': 'not_found'
                }

            return {
                'price': price,
                'url': url,
                'article': article,
                'status': 'success',
                'selector': used_selector  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
            }

        except Exception as e:
            print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
            return {
                'price': None,
                'url': f"https://www.ozon.ru/product/{article}/",
                'article': article,
                'status': 'error',
                'error': str(e)
            }

    def close(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä"""
        if self.driver:
            self.driver.quit()
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")
